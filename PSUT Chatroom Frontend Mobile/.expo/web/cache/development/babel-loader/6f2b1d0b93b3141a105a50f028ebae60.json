{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Login from \"../screen/authScreen/Login\";\nimport TopStack from \"./TopStack\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Meassging from \"../screen/chatScreen/Meassging\";\nimport { Button } from \"react-native-paper\";\nimport { userRoute } from \"../api/routeApi\";\nimport * as SecureStore from \"expo-secure-store\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Cache } from \"../helpers/cache\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Stack = function Stack() {\n  var StackApp = createNativeStackNavigator();\n  var nav = useNavigation();\n\n  var onLogout = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.setItemAsync(\"token\", \"\"));\n\n          case 2:\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(SecureStore.setItemAsync(\"user\", \"\"));\n\n          case 4:\n            Cache.userData = null;\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(userRoute.Logout());\n\n          case 8:\n            _context.next = 12;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](5);\n\n          case 12:\n            nav.reset({\n              index: 0,\n              routes: [{\n                name: \"Login\"\n              }]\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 10]], Promise);\n  };\n\n  return _jsxs(StackApp.Navigator, {\n    initialRouteName: \"Login\",\n    children: [_jsx(StackApp.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"Login\",\n      component: Login\n    }), _jsx(StackApp.Screen, {\n      name: \"TopStack\",\n      options: {\n        headerTitleAlign: \"center\",\n        headerTitle: \"PSUT_Chatroom\",\n        title: \"PSUT_Chatroom\",\n        headerBackVisible: false,\n        headerLeft: function headerLeft() {\n          return _jsx(View, {\n            children: _jsx(Button, {\n              icon: \"logout\",\n              onPress: onLogout,\n              children: _jsx(Text, {\n                style: {\n                  fontFamily: \"AppNormal\"\n                },\n                children: \"Logut\"\n              })\n            })\n          });\n        },\n        headerTitleStyle: {\n          fontFamily: \"AppNormal\",\n          fontSize: 16\n        }\n      },\n      component: TopStack\n    }), _jsx(StackApp.Screen, {\n      name: \"Meassge\",\n      component: Meassging,\n      options: {\n        headerTitleAlign: \"center\",\n        headerTitle: \"Conversations\",\n        title: \"Conversations\",\n        headerTitleStyle: {\n          fontFamily: \"AppNormal\",\n          fontSize: 16\n        }\n      }\n    })]\n  });\n};\n\nexport default Stack;","map":{"version":3,"names":["React","createNativeStackNavigator","Login","TopStack","Meassging","Button","userRoute","SecureStore","useNavigation","Cache","Stack","StackApp","nav","onLogout","setItemAsync","userData","Logout","reset","index","routes","name","headerShown","headerTitleAlign","headerTitle","title","headerBackVisible","headerLeft","fontFamily","headerTitleStyle","fontSize"],"sources":["C:/Users/Ahmed/Desktop/Projects/UniChat/Mobile/routeStack/Stack.js"],"sourcesContent":["import React from \"react\";\nimport {createNativeStackNavigator} from \"@react-navigation/native-stack\";\nimport Login from \"../screen/authScreen/Login\";\nimport TopStack from \"./TopStack\";\nimport {View, Text} from \"react-native\";\nimport Meassging from \"../screen/chatScreen/Meassging\";\nimport {Button} from \"react-native-paper\";\nimport {userRoute} from \"../api/routeApi\";\nimport * as SecureStore from \"expo-secure-store\";\nimport {useNavigation} from \"@react-navigation/native\";\nimport {Cache} from \"../helpers/cache\";\n\nconst Stack = () => {\n    const StackApp = createNativeStackNavigator();\n\n    const nav = useNavigation();\n\n    const onLogout = async () => {\n        await SecureStore.setItemAsync(\"token\", \"\");\n        await SecureStore.setItemAsync(\"user\", \"\");\n        Cache.userData = null;\n\n        try {\n            await userRoute.Logout();\n        } catch (error) {\n        }\n\n        nav.reset({\n            index: 0,\n            routes: [{name: \"Login\"}],\n        });\n    };\n\n    return (\n        <StackApp.Navigator initialRouteName=\"Login\">\n            <StackApp.Screen\n                options={{headerShown: false}}\n                name=\"Login\"\n                component={Login}\n            />\n            <StackApp.Screen\n                name=\"TopStack\"\n                options={{\n                    headerTitleAlign: \"center\",\n                    headerTitle: \"PSUT_Chatroom\",\n                    title: \"PSUT_Chatroom\",\n                    headerBackVisible: false,\n                    headerLeft: () => (\n                        <View>\n                            <Button icon={\"logout\"} onPress={onLogout}>\n                                <Text style={{fontFamily: \"AppNormal\"}}>Logut</Text>\n                            </Button>\n                        </View>\n                    ),\n                    headerTitleStyle: {fontFamily: \"AppNormal\", fontSize: 16},\n                }}\n                component={TopStack}\n            />\n            <StackApp.Screen\n                name=\"Meassge\"\n                component={Meassging}\n                options={{\n                    headerTitleAlign: \"center\",\n                    headerTitle: \"Conversations\",\n                    title: \"Conversations\",\n                    headerTitleStyle: {fontFamily: \"AppNormal\", fontSize: 16},\n                }}\n            />\n        </StackApp.Navigator>\n    );\n};\n\nexport default Stack;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,0BAAR,QAAyC,gCAAzC;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;;;AAEA,OAAOC,SAAP;AACA,SAAQC,MAAR,QAAqB,oBAArB;AACA,SAAQC,SAAR;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,SAAQC,aAAR,QAA4B,0BAA5B;AACA,SAAQC,KAAR;;;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;EAChB,IAAMC,QAAQ,GAAGV,0BAA0B,EAA3C;EAEA,IAAMW,GAAG,GAAGJ,aAAa,EAAzB;;EAEA,IAAMK,QAAQ,GAAG;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACPN,WAAW,CAACO,YAAZ,CAAyB,OAAzB,EAAkC,EAAlC,CADO;;UAAA;YAAA;YAAA,iCAEPP,WAAW,CAACO,YAAZ,CAAyB,MAAzB,EAAiC,EAAjC,CAFO;;UAAA;YAGbL,KAAK,CAACM,QAAN,GAAiB,IAAjB;YAHa;YAAA;YAAA,iCAMHT,SAAS,CAACU,MAAV,EANG;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;;UAAA;YAUbJ,GAAG,CAACK,KAAJ,CAAU;cACNC,KAAK,EAAE,CADD;cAENC,MAAM,EAAE,CAAC;gBAACC,IAAI,EAAE;cAAP,CAAD;YAFF,CAAV;;UAVa;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAjB;;EAgBA,OACI,MAAC,QAAD,CAAU,SAAV;IAAoB,gBAAgB,EAAC,OAArC;IAAA,WACI,KAAC,QAAD,CAAU,MAAV;MACI,OAAO,EAAE;QAACC,WAAW,EAAE;MAAd,CADb;MAEI,IAAI,EAAC,OAFT;MAGI,SAAS,EAAEnB;IAHf,EADJ,EAMI,KAAC,QAAD,CAAU,MAAV;MACI,IAAI,EAAC,UADT;MAEI,OAAO,EAAE;QACLoB,gBAAgB,EAAE,QADb;QAELC,WAAW,EAAE,WAFR;QAGLC,KAAK,EAAE,WAHF;QAILC,iBAAiB,EAAE,KAJd;QAKLC,UAAU,EAAE;UAAA,OACR,KAAC,IAAD;YAAA,UACI,KAAC,MAAD;cAAQ,IAAI,EAAE,QAAd;cAAwB,OAAO,EAAEb,QAAjC;cAAA,UACI,KAAC,IAAD;gBAAM,KAAK,EAAE;kBAACc,UAAU,EAAE;gBAAb,CAAb;gBAAA;cAAA;YADJ;UADJ,EADQ;QAAA,CALP;QAYLC,gBAAgB,EAAE;UAACD,UAAU,EAAE,WAAb;UAA0BE,QAAQ,EAAE;QAApC;MAZb,CAFb;MAgBI,SAAS,EAAE1B;IAhBf,EANJ,EAwBI,KAAC,QAAD,CAAU,MAAV;MACI,IAAI,EAAC,SADT;MAEI,SAAS,EAAEC,SAFf;MAGI,OAAO,EAAE;QACLkB,gBAAgB,EAAE,QADb;QAELC,WAAW,EAAE,eAFR;QAGLC,KAAK,EAAE,eAHF;QAILI,gBAAgB,EAAE;UAACD,UAAU,EAAE,WAAb;UAA0BE,QAAQ,EAAE;QAApC;MAJb;IAHb,EAxBJ;EAAA,EADJ;AAqCH,CA1DD;;AA4DA,eAAenB,KAAf"},"metadata":{},"sourceType":"module"}