{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport Login from \"../screen/authScreen/Login\";\nimport TopStack from \"./TopStack\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Meassging from \"../screen/chatScreen/Meassging\";\nimport { Button } from \"react-native-paper\";\nimport { userRoute } from \"../api/routeApi\";\nimport * as SecureStore from \"expo-secure-store\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Cache } from \"../helpers/cache\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Stack = function Stack() {\n  var StackApp = createNativeStackNavigator();\n  var nav = useNavigation();\n\n  var onLogout = function onLogout() {\n    return _regeneratorRuntime.async(function onLogout$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.setItemAsync(\"token\", \"\"));\n\n          case 2:\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(SecureStore.setItemAsync(\"user\", \"\"));\n\n          case 4:\n            Cache.userData = null;\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(userRoute.Logout());\n\n          case 8:\n            _context.next = 12;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](5);\n\n          case 12:\n            nav.reset({\n              index: 0,\n              routes: [{\n                name: \"Login\"\n              }]\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 10]], Promise);\n  };\n\n  return _jsxs(StackApp.Navigator, {\n    initialRouteName: \"Login\",\n    children: [_jsx(StackApp.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"Login\",\n      component: Login\n    }), _jsx(StackApp.Screen, {\n      name: \"TopStack\",\n      options: {\n        headerTitleAlign: \"center\",\n        headerTitle: \"PSUT_Chatroom\",\n        title: \"PSUT_Chatroom\",\n        headerBackVisible: false,\n        headerLeft: function headerLeft() {\n          return _jsx(View, {\n            children: _jsx(Button, {\n              icon: \"logout\",\n              onPress: onLogout,\n              children: _jsx(Text, {\n                style: {\n                  fontFamily: \"AppNormal\"\n                },\n                children: \"Logut\"\n              })\n            })\n          });\n        },\n        headerTitleStyle: {\n          fontFamily: \"AppNormal\",\n          fontSize: 16\n        }\n      },\n      component: TopStack\n    }), _jsx(StackApp.Screen, {\n      name: \"Meassge\",\n      component: Meassging,\n      options: {\n        headerTitleAlign: \"center\",\n        headerTitle: \"Conversations\",\n        title: \"Conversations\",\n        headerTitleStyle: {\n          fontFamily: \"AppNormal\",\n          fontSize: 16\n        }\n      }\n    })]\n  });\n};\n\nexport default Stack;","map":{"version":3,"sources":["C:/Users/Ahmed/Desktop/UniChat/Mobile/routeStack/Stack.js"],"names":["React","createNativeStackNavigator","Login","TopStack","Meassging","Button","userRoute","SecureStore","useNavigation","Cache","Stack","StackApp","nav","onLogout","setItemAsync","userData","Logout","reset","index","routes","name","headerShown","headerTitleAlign","headerTitle","title","headerBackVisible","headerLeft","fontFamily","headerTitleStyle","fontSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,0BAAR,QAAyC,gCAAzC;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;;;AAEA,OAAOC,SAAP;AACA,SAAQC,MAAR,QAAqB,oBAArB;AACA,SAAQC,SAAR;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,SAAQC,aAAR,QAA4B,0BAA5B;AACA,SAAQC,KAAR;;;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChB,MAAMC,QAAQ,GAAGV,0BAA0B,EAA3C;AAEA,MAAMW,GAAG,GAAGJ,aAAa,EAAzB;;AAEA,MAAMK,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACPN,WAAW,CAACO,YAAZ,CAAyB,OAAzB,EAAkC,EAAlC,CADO;;AAAA;AAAA;AAAA,6CAEPP,WAAW,CAACO,YAAZ,CAAyB,MAAzB,EAAiC,EAAjC,CAFO;;AAAA;AAGbL,YAAAA,KAAK,CAACM,QAAN,GAAiB,IAAjB;AAHa;AAAA;AAAA,6CAMHT,SAAS,CAACU,MAAV,EANG;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAUbJ,YAAAA,GAAG,CAACK,KAAJ,CAAU;AACNC,cAAAA,KAAK,EAAE,CADD;AAENC,cAAAA,MAAM,EAAE,CAAC;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAAD;AAFF,aAAV;;AAVa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAgBA,SACI,MAAC,QAAD,CAAU,SAAV;AAAoB,IAAA,gBAAgB,EAAC,OAArC;AAAA,eACI,KAAC,QAAD,CAAU,MAAV;AACI,MAAA,OAAO,EAAE;AAACC,QAAAA,WAAW,EAAE;AAAd,OADb;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,SAAS,EAAEnB;AAHf,MADJ,EAMI,KAAC,QAAD,CAAU,MAAV;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,OAAO,EAAE;AACLoB,QAAAA,gBAAgB,EAAE,QADb;AAELC,QAAAA,WAAW,EAAE,WAFR;AAGLC,QAAAA,KAAK,EAAE,WAHF;AAILC,QAAAA,iBAAiB,EAAE,KAJd;AAKLC,QAAAA,UAAU,EAAE;AAAA,iBACR,KAAC,IAAD;AAAA,sBACI,KAAC,MAAD;AAAQ,cAAA,IAAI,EAAE,QAAd;AAAwB,cAAA,OAAO,EAAEb,QAAjC;AAAA,wBACI,KAAC,IAAD;AAAM,gBAAA,KAAK,EAAE;AAACc,kBAAAA,UAAU,EAAE;AAAb,iBAAb;AAAA;AAAA;AADJ;AADJ,YADQ;AAAA,SALP;AAYLC,QAAAA,gBAAgB,EAAE;AAACD,UAAAA,UAAU,EAAE,WAAb;AAA0BE,UAAAA,QAAQ,EAAE;AAApC;AAZb,OAFb;AAgBI,MAAA,SAAS,EAAE1B;AAhBf,MANJ,EAwBI,KAAC,QAAD,CAAU,MAAV;AACI,MAAA,IAAI,EAAC,SADT;AAEI,MAAA,SAAS,EAAEC,SAFf;AAGI,MAAA,OAAO,EAAE;AACLkB,QAAAA,gBAAgB,EAAE,QADb;AAELC,QAAAA,WAAW,EAAE,eAFR;AAGLC,QAAAA,KAAK,EAAE,eAHF;AAILI,QAAAA,gBAAgB,EAAE;AAACD,UAAAA,UAAU,EAAE,WAAb;AAA0BE,UAAAA,QAAQ,EAAE;AAApC;AAJb;AAHb,MAxBJ;AAAA,IADJ;AAqCH,CA1DD;;AA4DA,eAAenB,KAAf","sourcesContent":["import React from \"react\";\nimport {createNativeStackNavigator} from \"@react-navigation/native-stack\";\nimport Login from \"../screen/authScreen/Login\";\nimport TopStack from \"./TopStack\";\nimport {View, Text} from \"react-native\";\nimport Meassging from \"../screen/chatScreen/Meassging\";\nimport {Button} from \"react-native-paper\";\nimport {userRoute} from \"../api/routeApi\";\nimport * as SecureStore from \"expo-secure-store\";\nimport {useNavigation} from \"@react-navigation/native\";\nimport {Cache} from \"../helpers/cache\";\n\nconst Stack = () => {\n    const StackApp = createNativeStackNavigator();\n\n    const nav = useNavigation();\n\n    const onLogout = async () => {\n        await SecureStore.setItemAsync(\"token\", \"\");\n        await SecureStore.setItemAsync(\"user\", \"\");\n        Cache.userData = null;\n\n        try {\n            await userRoute.Logout();\n        } catch (error) {\n        }\n\n        nav.reset({\n            index: 0,\n            routes: [{name: \"Login\"}],\n        });\n    };\n\n    return (\n        <StackApp.Navigator initialRouteName=\"Login\">\n            <StackApp.Screen\n                options={{headerShown: false}}\n                name=\"Login\"\n                component={Login}\n            />\n            <StackApp.Screen\n                name=\"TopStack\"\n                options={{\n                    headerTitleAlign: \"center\",\n                    headerTitle: \"PSUT_Chatroom\",\n                    title: \"PSUT_Chatroom\",\n                    headerBackVisible: false,\n                    headerLeft: () => (\n                        <View>\n                            <Button icon={\"logout\"} onPress={onLogout}>\n                                <Text style={{fontFamily: \"AppNormal\"}}>Logut</Text>\n                            </Button>\n                        </View>\n                    ),\n                    headerTitleStyle: {fontFamily: \"AppNormal\", fontSize: 16},\n                }}\n                component={TopStack}\n            />\n            <StackApp.Screen\n                name=\"Meassge\"\n                component={Meassging}\n                options={{\n                    headerTitleAlign: \"center\",\n                    headerTitle: \"Conversations\",\n                    title: \"Conversations\",\n                    headerTitleStyle: {fontFamily: \"AppNormal\", fontSize: 16},\n                }}\n            />\n        </StackApp.Navigator>\n    );\n};\n\nexport default Stack;\n"]},"metadata":{},"sourceType":"module"}