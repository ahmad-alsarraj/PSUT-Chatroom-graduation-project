{"ast":null,"code":"import axiosConfiguration from \"./axiosConfiguration\";\nvar axios = axiosConfiguration(\"\");\nexport var PSUT_ChatroomApi = {\n  createGroup: function createGroup(name) {\n    return axios.post(\"Group/Create\", {\n      name: name\n    });\n  },\n  updateGroup: function updateGroup(id, name) {\n    return axios.patch(\"Group/Update\", {\n      name: name,\n      id: id\n    });\n  },\n  deleteGroup: function deleteGroup(ids) {\n    return axios.delete(\"Group/Delete\", {\n      data: ids\n    });\n  },\n  removeMember: function removeMember(dto) {\n    return axios.delete(\"GroupMember/DeleteOne\", {\n      data: dto\n    });\n  },\n  addMember: function addMember(dto) {\n    return axios.post(\"GroupMember/Create\", dto);\n  },\n  getNonExistingMembers: function getNonExistingMembers(groupId) {\n    return axios.get(\"GroupMember/GetStudentsNotInGroup/\" + groupId);\n  },\n  getGroups: function getGroups() {\n    return axios.post(\"Group/GetGroups\", {\n      offset: 0,\n      count: 100\n    });\n  },\n  GetMessagesInConversation: function GetMessagesInConversation(conversationId) {\n    return axios.post(\"Message/GetMessagesInConversation\", {\n      conversationId: conversationId,\n      offset: 0,\n      count: 999\n    });\n  },\n  sendMessage: function sendMessage(msg) {\n    return axios.post(\"Message/Create\", msg);\n  },\n  sendPing: function sendPing(msg) {\n    return axios.post(\"Ping/Create\", msg);\n  },\n  createBackup: function createBackup() {\n    return axios.post(\"Admin/CreateBackup\");\n  },\n  patchDatabase: function patchDatabase() {\n    return axios.post(\"Admin/PatchDb\");\n  },\n  clearDatabase: function clearDatabase() {\n    return axios.post(\"Admin/ClearDb\");\n  }\n};\nexport var userRoute = {\n  LoginAuth: function LoginAuth(data) {\n    return axios.post(\"User/Login\", {\n      email: data.email,\n      googleToken: data.password\n    });\n  },\n  GetUser: function GetUser() {\n    return axios.post(\"User/GetLoggedIn\");\n  },\n  Logout: function Logout() {\n    return axios.post(\"User/Logout\");\n  }\n};","map":{"version":3,"names":["axiosConfiguration","axios","PSUT_ChatroomApi","createGroup","name","post","updateGroup","id","patch","deleteGroup","ids","delete","data","removeMember","dto","addMember","getNonExistingMembers","groupId","get","getGroups","offset","count","GetMessagesInConversation","conversationId","sendMessage","msg","sendPing","createBackup","patchDatabase","clearDatabase","userRoute","LoginAuth","email","googleToken","password","GetUser","Logout"],"sources":["C:/Users/Ahmed/Desktop/Projects/UniChat/Mobile/api/routeApi.js"],"sourcesContent":["import axiosConfiguration from \"./axiosConfiguration\";\n\nconst axios = axiosConfiguration(\"\");\n\nexport const PSUT_ChatroomApi = {\n  createGroup: (name) => axios.post(\"Group/Create\", { name }),\n  updateGroup: (id, name) => axios.patch(\"Group/Update\", { name, id }),\n  deleteGroup: (ids) => axios.delete(\"Group/Delete\", { data: ids }),\n  removeMember: (dto) => axios.delete(\"GroupMember/DeleteOne\", { data: dto }),\n  addMember: (dto) => axios.post(\"GroupMember/Create\", dto),\n  getNonExistingMembers: (groupId) =>\n    axios.get(`GroupMember/GetStudentsNotInGroup/${groupId}`),\n  getGroups: () =>\n    axios.post(\"Group/GetGroups\", {\n      offset: 0,\n      count: 100,\n    }),\n  GetMessagesInConversation: (conversationId) =>\n    axios.post(\"Message/GetMessagesInConversation\", {\n      conversationId,\n      offset: 0,\n      count: 999,\n    }),\n  sendMessage: (msg) => axios.post(\"Message/Create\", msg),\n  sendPing: (msg) => axios.post(\"Ping/Create\", msg),\n  createBackup: () => axios.post(\"Admin/CreateBackup\"),\n  patchDatabase: () => axios.post(\"Admin/PatchDb\"),\n  clearDatabase: () => axios.post(\"Admin/ClearDb\"),\n};\n\nexport const userRoute = {\n  LoginAuth: (data) =>\n    axios.post(`User/Login`, {\n      //user email: \"abd20170112@std.psut.edu.jo\",\n      //inst email: \"i@std.psut.edu.jo\",\n      //admin email: \"b@std.psut.edu.jo\",\n      // default password for all \"12534154545\"\n      email: data.email,\n      googleToken: data.password,\n    }),\n  GetUser: () => axios.post(\"User/GetLoggedIn\"),\n  Logout: () => axios.post(\"User/Logout\"),\n};\n"],"mappings":"AAAA,OAAOA,kBAAP;AAEA,IAAMC,KAAK,GAAGD,kBAAkB,CAAC,EAAD,CAAhC;AAEA,OAAO,IAAME,UAAU,GAAG;EACxBC,WAAW,EAAE,qBAACC,IAAD;IAAA,OAAUH,KAAK,CAACI,IAAN,CAAW,cAAX,EAA2B;MAAED,IAAI,EAAJA;IAAF,CAA3B,CAAV;EAAA,CADW;EAExBE,WAAW,EAAE,qBAACC,EAAD,EAAKH,IAAL;IAAA,OAAcH,KAAK,CAACO,KAAN,CAAY,cAAZ,EAA4B;MAAEJ,IAAI,EAAJA,IAAF;MAAQG,EAAE,EAAFA;IAAR,CAA5B,CAAd;EAAA,CAFW;EAGxBE,WAAW,EAAE,qBAACC,GAAD;IAAA,OAAST,KAAK,CAACU,MAAN,CAAa,cAAb,EAA6B;MAAEC,IAAI,EAAEF;IAAR,CAA7B,CAAT;EAAA,CAHW;EAIxBG,YAAY,EAAE,sBAACC,GAAD;IAAA,OAASb,KAAK,CAACU,MAAN,CAAa,uBAAb,EAAsC;MAAEC,IAAI,EAAEE;IAAR,CAAtC,CAAT;EAAA,CAJU;EAKxBC,SAAS,EAAE,mBAACD,GAAD;IAAA,OAASb,KAAK,CAACI,IAAN,CAAW,oBAAX,EAAiCS,GAAjC,CAAT;EAAA,CALa;EAMxBE,qBAAqB,EAAE,+BAACC,OAAD;IAAA,OACrBhB,KAAK,CAACiB,GAAN,wCAA+CD,OAA/C,CADqB;EAAA,CANC;EAQxBE,SAAS,EAAE;IAAA,OACTlB,KAAK,CAACI,IAAN,CAAW,iBAAX,EAA8B;MAC5Be,MAAM,EAAE,CADoB;MAE5BC,KAAK,EAAE;IAFqB,CAA9B,CADS;EAAA,CARa;EAaxBC,yBAAyB,EAAE,mCAACC,cAAD;IAAA,OACzBtB,KAAK,CAACI,IAAN,CAAW,mCAAX,EAAgD;MAC9CkB,cAAc,EAAdA,cAD8C;MAE9CH,MAAM,EAAE,CAFsC;MAG9CC,KAAK,EAAE;IAHuC,CAAhD,CADyB;EAAA,CAbH;EAmBxBG,WAAW,EAAE,qBAACC,GAAD;IAAA,OAASxB,KAAK,CAACI,IAAN,CAAW,gBAAX,EAA6BoB,GAA7B,CAAT;EAAA,CAnBW;EAoBxBC,QAAQ,EAAE,kBAACD,GAAD;IAAA,OAASxB,KAAK,CAACI,IAAN,CAAW,aAAX,EAA0BoB,GAA1B,CAAT;EAAA,CApBc;EAqBxBE,YAAY,EAAE;IAAA,OAAM1B,KAAK,CAACI,IAAN,CAAW,oBAAX,CAAN;EAAA,CArBU;EAsBxBuB,aAAa,EAAE;IAAA,OAAM3B,KAAK,CAACI,IAAN,CAAW,eAAX,CAAN;EAAA,CAtBS;EAuBxBwB,aAAa,EAAE;IAAA,OAAM5B,KAAK,CAACI,IAAN,CAAW,eAAX,CAAN;EAAA;AAvBS,CAAnB;AA0BP,OAAO,IAAMyB,SAAS,GAAG;EACvBC,SAAS,EAAE,mBAACnB,IAAD;IAAA,OACTX,KAAK,CAACI,IAAN,eAAyB;MAKvB2B,KAAK,EAAEpB,IAAI,CAACoB,KALW;MAMvBC,WAAW,EAAErB,IAAI,CAACsB;IANK,CAAzB,CADS;EAAA,CADY;EAUvBC,OAAO,EAAE;IAAA,OAAMlC,KAAK,CAACI,IAAN,CAAW,kBAAX,CAAN;EAAA,CAVc;EAWvB+B,MAAM,EAAE;IAAA,OAAMnC,KAAK,CAACI,IAAN,CAAW,aAAX,CAAN;EAAA;AAXe,CAAlB"},"metadata":{},"sourceType":"module"}