{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Axios from \"axios\";\nimport { port, REACT_APP_GATEWAY_URL } from \"./apiKey\";\nimport * as SecureStore from \"expo-secure-store\";\n\nvar axiosConfiguration = function axiosConfiguration(apiName) {\n  var axiosConfig = {\n    baseURL: \"http://\" + REACT_APP_GATEWAY_URL + \":\" + port + \"/\" + apiName\n  };\n  var axios = Axios.create(axiosConfig);\n\n  var requestHandler = function requestHandler(request) {\n    var userToken;\n    return _regeneratorRuntime.async(function requestHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync(\"token\"));\n\n          case 2:\n            userToken = _context.sent;\n            if (!!userToken) request.headers.Authorization = \"\" + userToken;\n            console.log(\"TOKEN-----\", userToken);\n            return _context.abrupt(\"return\", request);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onResponseError = function onResponseError(error) {\n    return _regeneratorRuntime.async(function onResponseError$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(\"\" + JSON.stringify(error));\n            return _context2.abrupt(\"return\", Promise.reject(error));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  axios.interceptors.request.use(function (request) {\n    return requestHandler(request);\n  }, function (error) {\n    return Promise.reject(error);\n  });\n  axios.interceptors.response.use(function (response) {\n    return response;\n  }, function (error) {\n    return onResponseError(error);\n  });\n  return axios;\n};\n\nexport default axiosConfiguration;","map":{"version":3,"sources":["C:/Users/Ahmed/Desktop/UniChat/Mobile/api/axiosConfiguration.js"],"names":["Axios","port","REACT_APP_GATEWAY_URL","SecureStore","axiosConfiguration","apiName","axiosConfig","baseURL","axios","create","requestHandler","request","getItemAsync","userToken","headers","Authorization","console","log","onResponseError","error","JSON","stringify","Promise","reject","interceptors","use","response"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,qBAAf;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,OAAD,EAAa;AACtC,MAAMC,WAAW,GAAG;AAClBC,IAAAA,OAAO,cAAYL,qBAAZ,SAAqCD,IAArC,SAA6CI;AADlC,GAApB;AAIA,MAAMG,KAAK,GAAGR,KAAK,CAACS,MAAN,CAAaH,WAAb,CAAd;;AAEA,MAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACGR,WAAW,CAACS,YAAZ,CAAyB,OAAzB,CADH;;AAAA;AACfC,YAAAA,SADe;AAGrB,gBAAI,CAAC,CAACA,SAAN,EAAiBF,OAAO,CAACG,OAAR,CAAgBC,aAAhB,QAAmCF,SAAnC;AAEjBG,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,SAA1B;AALqB,6CAMdF,OANc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AASA,MAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AACtBH,YAAAA,OAAO,CAACC,GAAR,MAAeG,IAAI,CAACC,SAAL,CAAeF,KAAf,CAAf;AADsB,8CAEfG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAFe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAKAX,EAAAA,KAAK,CAACgB,YAAN,CAAmBb,OAAnB,CAA2Bc,GAA3B,CACE,UAACd,OAAD;AAAA,WAAaD,cAAc,CAACC,OAAD,CAA3B;AAAA,GADF,EAEE,UAACQ,KAAD;AAAA,WAAWG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAX;AAAA,GAFF;AAKAX,EAAAA,KAAK,CAACgB,YAAN,CAAmBE,QAAnB,CAA4BD,GAA5B,CACE,UAACC,QAAD;AAAA,WAAcA,QAAd;AAAA,GADF,EAEE,UAACP,KAAD;AAAA,WAAWD,eAAe,CAACC,KAAD,CAA1B;AAAA,GAFF;AAKA,SAAOX,KAAP;AACD,CAhCD;;AAkCA,eAAeJ,kBAAf","sourcesContent":["import Axios from \"axios\";\r\nimport { port, REACT_APP_GATEWAY_URL } from \"./apiKey\";\r\nimport * as SecureStore from \"expo-secure-store\";\r\n\r\nconst axiosConfiguration = (apiName) => {\r\n  const axiosConfig = {\r\n    baseURL: `http://${REACT_APP_GATEWAY_URL}:${port}/${apiName}`,\r\n  };\r\n\r\n  const axios = Axios.create(axiosConfig);\r\n\r\n  const requestHandler = async (request) => {\r\n    const userToken = await SecureStore.getItemAsync(\"token\");\r\n    // alert(userToken);\r\n    if (!!userToken) request.headers.Authorization = `${userToken}`;\r\n\r\n    console.log(\"TOKEN-----\", userToken);\r\n    return request;\r\n  };\r\n\r\n  const onResponseError = async (error) => {\r\n    console.log(`${JSON.stringify(error)}`);\r\n    return Promise.reject(error);\r\n  };\r\n\r\n  axios.interceptors.request.use(\r\n    (request) => requestHandler(request),\r\n    (error) => Promise.reject(error)\r\n  );\r\n\r\n  axios.interceptors.response.use(\r\n    (response) => response,\r\n    (error) => onResponseError(error)\r\n  );\r\n\r\n  return axios;\r\n};\r\n\r\nexport default axiosConfiguration;\r\n"]},"metadata":{},"sourceType":"module"}