{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { UnavailabilityError } from 'expo-modules-core';\nimport ExpoGoogleSignIn from \"./ExpoGoogleSignIn\";\nimport GoogleAuthentication from \"./GoogleAuthentication\";\nimport GoogleIdentity from \"./GoogleIdentity\";\n\nvar GoogleUser = function (_GoogleIdentity) {\n  _inherits(GoogleUser, _GoogleIdentity);\n\n  var _super = _createSuper(GoogleUser);\n\n  function GoogleUser(options) {\n    var _this;\n\n    _classCallCheck(this, GoogleUser);\n\n    _this = _super.call(this, options);\n\n    _this.clearCache = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (ExpoGoogleSignIn.clearCacheAsync) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              if (!(!_this.auth || !_this.auth.accessToken)) {\n                _context.next = 4;\n                break;\n              }\n\n              throw new Error('GoogleSignIn: GoogleUser.clearCache(): Invalid accessToken');\n\n            case 4:\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(ExpoGoogleSignIn.clearCacheAsync({\n                token: _this.auth.accessToken\n              }));\n\n            case 6:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getHeaders = function () {\n      if (!_this.auth || !_this.auth.accessToken || !_this.auth.accessToken.length) {\n        throw new Error('GoogleSignIn: GoogleUser.getHeaders(): Invalid accessToken');\n      }\n\n      return {\n        Authorization: \"Bearer \" + _this.auth.accessToken,\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      };\n    };\n\n    _this.refreshAuth = function _callee2() {\n      var response;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (ExpoGoogleSignIn.getTokensAsync) {\n                _context2.next = 2;\n                break;\n              }\n\n              throw new UnavailabilityError('GoogleSignIn', 'getTokensAsync');\n\n            case 2:\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(ExpoGoogleSignIn.getTokensAsync(false));\n\n            case 4:\n              response = _context2.sent;\n\n              if (response.idToken == null && _this.auth) {\n                response.idToken = _this.auth.idToken;\n              }\n\n              if (!_this.auth) {\n                _this.auth = new GoogleAuthentication(response);\n              } else {\n                _this.auth.idToken = response.idToken;\n                _this.auth.accessToken = response.accessToken;\n              }\n\n              return _context2.abrupt(\"return\", _this.auth);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var auth = options.auth,\n        scopes = options.scopes,\n        hostedDomain = options.hostedDomain,\n        serverAuthCode = options.serverAuthCode;\n    _this.auth = auth;\n    _this.scopes = scopes;\n    _this.hostedDomain = hostedDomain;\n    _this.serverAuthCode = serverAuthCode;\n    return _this;\n  }\n\n  _createClass(GoogleUser, [{\n    key: \"equals\",\n    value: function equals(other) {\n      if (!_get(_getPrototypeOf(GoogleUser.prototype), \"equals\", this).call(this, other) || !(other instanceof GoogleUser)) {\n        return false;\n      }\n\n      if (this.auth != null) {\n        return this.auth.equals(other.auth) && this.scopes === other.scopes && this.hostedDomain === other.hostedDomain && this.serverAuthCode === other.serverAuthCode;\n      } else {\n        return other.auth == null;\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var auth = this.auth;\n\n      if (this.auth && this.auth.toJSON) {\n        auth = this.auth.toJSON();\n      }\n\n      return _objectSpread(_objectSpread({}, _get(_getPrototypeOf(GoogleUser.prototype), \"toJSON\", this).call(this)), {}, {\n        auth: auth,\n        scopes: this.scopes,\n        hostedDomain: this.hostedDomain,\n        serverAuthCode: this.serverAuthCode\n      });\n    }\n  }]);\n\n  return GoogleUser;\n}(GoogleIdentity);\n\nexport default GoogleUser;","map":{"version":3,"sources":["../src/GoogleUser.ts"],"names":[],"mappings":"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","sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport ExpoGoogleSignIn from './ExpoGoogleSignIn';\nimport GoogleAuthentication from './GoogleAuthentication';\nimport GoogleIdentity from './GoogleIdentity';\n\nclass GoogleUser extends GoogleIdentity {\n  auth: GoogleAuthentication | null;\n  scopes: string[];\n  hostedDomain?: string;\n  serverAuthCode?: string;\n\n  constructor(options) {\n    super(options);\n    const { auth, scopes, hostedDomain, serverAuthCode } = options;\n\n    this.auth = auth;\n    this.scopes = scopes;\n    this.hostedDomain = hostedDomain;\n    this.serverAuthCode = serverAuthCode;\n  }\n\n  clearCache = async () => {\n    if (!ExpoGoogleSignIn.clearCacheAsync) {\n      return;\n    }\n    if (!this.auth || !this.auth.accessToken) {\n      throw new Error('GoogleSignIn: GoogleUser.clearCache(): Invalid accessToken');\n    }\n    return await ExpoGoogleSignIn.clearCacheAsync({ token: this.auth.accessToken });\n  };\n\n  getHeaders = (): {\n    [key: string]: string;\n  } => {\n    if (!this.auth || !this.auth.accessToken || !this.auth.accessToken.length) {\n      throw new Error('GoogleSignIn: GoogleUser.getHeaders(): Invalid accessToken');\n    }\n    return {\n      Authorization: `Bearer ${this.auth.accessToken}`,\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    };\n  };\n\n  refreshAuth = async (): Promise<GoogleAuthentication | null> => {\n    if (!ExpoGoogleSignIn.getTokensAsync) {\n      throw new UnavailabilityError('GoogleSignIn', 'getTokensAsync');\n    }\n    const response: {\n      idToken?: string;\n      accessToken?: string;\n      auth?: {\n        accessToken?: string;\n      };\n    } = await ExpoGoogleSignIn.getTokensAsync(false);\n    if (response.idToken == null && this.auth) {\n      response.idToken = this.auth.idToken;\n    }\n    if (!this.auth) {\n      this.auth = new GoogleAuthentication(response);\n    } else {\n      this.auth.idToken = response.idToken;\n      this.auth.accessToken = response.accessToken;\n    }\n    return this.auth;\n  };\n\n  equals(other: any): boolean {\n    if (!super.equals(other) || !(other instanceof GoogleUser)) {\n      return false;\n    }\n\n    if (this.auth != null) {\n      return (\n        this.auth.equals(other.auth) &&\n        this.scopes === other.scopes &&\n        this.hostedDomain === other.hostedDomain &&\n        this.serverAuthCode === other.serverAuthCode\n      );\n    } else {\n      return other.auth == null;\n    }\n  }\n\n  toJSON(): { [key: string]: any } {\n    let auth: any = this.auth;\n    if (this.auth && this.auth.toJSON) {\n      auth = this.auth.toJSON();\n    }\n\n    return {\n      ...super.toJSON(),\n      auth,\n      scopes: this.scopes,\n      hostedDomain: this.hostedDomain,\n      serverAuthCode: this.serverAuthCode,\n    };\n  }\n}\n\nexport default GoogleUser;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}