{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { styles } from \"../../style/style\";\nimport LottieView from \"lottie-react-native\";\nimport { Button, HelperText, TextInput } from \"react-native-paper\";\nimport Gap from \"../../componnetns/Gap\";\nimport { userRoute } from \"../../api/routeApi\";\nimport * as GoogleSignIn from \"expo-google-sign-in\";\nimport * as SecureStore from \"expo-secure-store\";\nimport { Cache } from \"../../helpers/cache\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    email: \"\",\n    password: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      userData = _useState2[0],\n      setUserData = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var signInAsync = function signInAsync() {\n    var token, _await$userRoute$GetU, data;\n\n    return _regeneratorRuntime.async(function signInAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync(\"token\"));\n\n          case 2:\n            token = _context.sent;\n            console.log(\"token------ from storage\", token);\n\n            if (!token) {\n              _context.next = 24;\n              break;\n            }\n\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(userRoute.GetUser());\n\n          case 8:\n            _await$userRoute$GetU = _context.sent;\n            data = _await$userRoute$GetU.data;\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(SecureStore.setItemAsync(\"user\", JSON.stringify(data)));\n\n          case 12:\n            Cache.userData = data;\n            console.log(Cache.userData);\n            return _context.abrupt(\"return\", navigation.navigate(\"TopStack\"));\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](5);\n            console.log(\"else\");\n            _context.next = 22;\n            return _regeneratorRuntime.awrap(newLogin());\n\n          case 22:\n            _context.next = 26;\n            break;\n\n          case 24:\n            _context.next = 26;\n            return _regeneratorRuntime.awrap(newLogin());\n\n          case 26:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 17]], Promise);\n  };\n\n  var newLogin = function newLogin() {\n    var _await$userRoute$Logi, data;\n\n    return _regeneratorRuntime.async(function newLogin$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n\n            if (!(userData.password !== \"123\" || !userData.email.endsWith(\"@std.psut.edu.jo\"))) {\n              _context2.next = 6;\n              break;\n            }\n\n            setError(\"Invalid Credentials\");\n            return _context2.abrupt(\"return\");\n\n          case 6:\n            setError(\"\");\n\n          case 7:\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(userRoute.LoginAuth(userData));\n\n          case 9:\n            _await$userRoute$Logi = _context2.sent;\n            data = _await$userRoute$Logi.data;\n            console.log(\"token------ on login\", data.token);\n            _context2.next = 14;\n            return _regeneratorRuntime.awrap(SecureStore.setItemAsync(\"token\", data.token));\n\n          case 14:\n            _context2.next = 16;\n            return _regeneratorRuntime.awrap(SecureStore.setItemAsync(\"user\", JSON.stringify(data.user)));\n\n          case 16:\n            Cache.userData = data.user;\n            console.log(Cache.userData);\n            navigation.navigate(\"TopStack\");\n            _context2.next = 36;\n            break;\n\n          case 21:\n            _context2.prev = 21;\n            _context2.t0 = _context2[\"catch\"](0);\n            _context2.prev = 23;\n            _context2.next = 26;\n            return _regeneratorRuntime.awrap(userRoute.Logout());\n\n          case 26:\n            _context2.next = 28;\n            return _regeneratorRuntime.awrap(SecureStore.setItemAsync(\"token\", \"\"));\n\n          case 28:\n            _context2.next = 30;\n            return _regeneratorRuntime.awrap(SecureStore.setItemAsync(\"user\", \"\"));\n\n          case 30:\n            Cache.userData = null;\n            _context2.next = 36;\n            break;\n\n          case 33:\n            _context2.prev = 33;\n            _context2.t1 = _context2[\"catch\"](23);\n            alert(\"Invalid Credentials\");\n\n          case 36:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 21], [23, 33]], Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      backgroundColor: \"#128C7E\",\n      barStyle: \"light-content\"\n    }), _jsxs(View, {\n      style: styles.header,\n      children: [_jsx(LottieView, {\n        loop: true,\n        autoPlay: true,\n        speed: 0.4,\n        style: {\n          width: 200,\n          height: 200,\n          backgroundColor: \"#128C7E\"\n        },\n        source: require(\"../../assets/jsonfile/Messenger.json\")\n      }), _jsx(Text, {\n        style: styles.text_header,\n        children: \"PSUT_Chatroom\"\n      })]\n    }), _jsx(View, {\n      style: styles.footer,\n      children: _jsxs(ScrollView, {\n        children: [_jsx(HelperText, {\n          style: styles.helperTextStyle,\n          type: \"info\",\n          children: \"Email Address\"\n        }), _jsx(TextInput, {\n          error: error,\n          multiline: false,\n          mode: \"outlined\",\n          enablesReturnKeyAutomatically: true,\n          selectionColor: \"#128C7E\",\n          style: styles.textInputstyle,\n          value: userData.email,\n          onChangeText: function onChangeText(text) {\n            return setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n              email: text\n            }));\n          }\n        }), _jsx(HelperText, {\n          style: styles.helperTextStyle,\n          type: \"info\",\n          children: \"Password\"\n        }), _jsx(TextInput, {\n          error: error,\n          multiline: false,\n          mode: \"outlined\",\n          enablesReturnKeyAutomatically: true,\n          selectionColor: \"#128C7E\",\n          style: styles.textInputstyle,\n          value: userData.password,\n          onChangeText: function onChangeText(text) {\n            return setUserData(_objectSpread(_objectSpread({}, userData), {}, {\n              password: text\n            }));\n          }\n        }), _jsx(Gap, {\n          gapValue: \"10\",\n          type: \"col\"\n        }), _jsx(Button, {\n          mode: \"contained\",\n          theme: {\n            roundness: 10\n          },\n          labelStyle: {\n            fontFamily: \"AppNormal\"\n          },\n          contentStyle: styles.loginButton,\n          onPress: signInAsync,\n          children: \"LOGIN\"\n        })]\n      })\n    })]\n  });\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/Ahmed/Desktop/UniChat/Mobile/screen/authScreen/Login.js"],"names":["React","useState","styles","LottieView","Button","HelperText","TextInput","Gap","userRoute","GoogleSignIn","SecureStore","Cache","Login","navigation","email","password","userData","setUserData","error","setError","signInAsync","getItemAsync","token","console","log","GetUser","data","setItemAsync","JSON","stringify","navigate","newLogin","endsWith","LoginAuth","user","Logout","alert","container","header","width","height","backgroundColor","require","text_header","footer","helperTextStyle","textInputstyle","text","roundness","fontFamily","loginButton"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Platform, ScrollView, StatusBar, Text, View } from \"react-native\";\nimport { styles } from \"../../style/style\";\nimport LottieView from \"lottie-react-native\";\nimport { Button, HelperText, TextInput } from \"react-native-paper\";\nimport Gap from \"../../componnetns/Gap\";\nimport { userRoute } from \"../../api/routeApi\";\nimport * as GoogleSignIn from \"expo-google-sign-in\";\nimport * as SecureStore from \"expo-secure-store\";\nimport { Cache } from \"../../helpers/cache\";\n\n// TODO ADD Google Sign in\n\nconst Login = ({ navigation }) => {\n  const [userData, setUserData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [error, setError] = useState(\"\");\n\n  const signInAsync = async () => {\n    const token = await SecureStore.getItemAsync(\"token\");\n    console.log(\"token------ from storage\", token);\n    if (!!token) {\n      try {\n        const { data } = await userRoute.GetUser();\n        await SecureStore.setItemAsync(\"user\", JSON.stringify(data));\n        Cache.userData = data;\n        console.log(Cache.userData);\n        return navigation.navigate(\"TopStack\");\n      } catch (e) {\n        console.log(\"else\");\n        await newLogin();\n      }\n    } else {\n      await newLogin();\n    }\n  };\n\n  const newLogin = async () => {\n    try {\n      if (\n        userData.password !== \"123\" ||\n        !userData.email.endsWith(\"@std.psut.edu.jo\")\n      ) {\n        setError(\"Invalid Credentials\");\n        return;\n      } else {\n        setError(\"\");\n      }\n\n      const { data } = await userRoute.LoginAuth(userData);\n      console.log(\"token------ on login\", data.token);\n      await SecureStore.setItemAsync(\"token\", data.token);\n      await SecureStore.setItemAsync(\"user\", JSON.stringify(data.user));\n      Cache.userData = data.user;\n      console.log(Cache.userData);\n      navigation.navigate(\"TopStack\");\n    } catch {\n      try {\n        await userRoute.Logout();\n        await SecureStore.setItemAsync(\"token\", \"\");\n        await SecureStore.setItemAsync(\"user\", \"\");\n        Cache.userData = null;\n      } catch (error) {\n        alert(\"Invalid Credentials\");\n      }\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <StatusBar backgroundColor=\"#128C7E\" barStyle=\"light-content\" />\n      <View style={styles.header}>\n        <LottieView\n          loop={true}\n          autoPlay={true}\n          speed={0.4}\n          style={{\n            width: 200,\n            height: 200,\n            backgroundColor: \"#128C7E\",\n          }}\n          source={require(\"../../assets/jsonfile/Messenger.json\")}\n        />\n        <Text style={styles.text_header}>{\"PSUT_Chatroom\"}</Text>\n      </View>\n      <View style={styles.footer}>\n        <ScrollView>\n          <HelperText style={styles.helperTextStyle} type=\"info\">\n            Email Address\n          </HelperText>\n          <TextInput\n            error={error}\n            multiline={false}\n            mode=\"outlined\"\n            enablesReturnKeyAutomatically={true}\n            selectionColor={\"#128C7E\"}\n            style={styles.textInputstyle}\n            value={userData.email}\n            onChangeText={(text) => setUserData({ ...userData, email: text })}\n          />\n          <HelperText style={styles.helperTextStyle} type=\"info\">\n            Password\n          </HelperText>\n          <TextInput\n            error={error}\n            multiline={false}\n            mode=\"outlined\"\n            enablesReturnKeyAutomatically={true}\n            selectionColor={\"#128C7E\"}\n            style={styles.textInputstyle}\n            value={userData.password}\n            onChangeText={(text) =>\n              setUserData({ ...userData, password: text })\n            }\n          />\n\n          <Gap gapValue=\"10\" type=\"col\" />\n\n          <Button\n            mode=\"contained\"\n            theme={{ roundness: 10 }}\n            labelStyle={{ fontFamily: \"AppNormal\" }}\n            contentStyle={styles.loginButton}\n            onPress={signInAsync}\n          >\n            LOGIN\n          </Button>\n        </ScrollView>\n      </View>\n    </View>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}