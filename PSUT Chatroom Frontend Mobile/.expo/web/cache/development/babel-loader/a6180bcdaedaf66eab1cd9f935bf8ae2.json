{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button, Modal, Portal, Text } from \"react-native-paper\";\nimport { PSUT_ChatroomApi } from \"../api/routeApi\";\nimport LoadingScreen from \"../componnetns/LoadingScreen\";\nimport { Cache } from \"../helpers/cache\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ManageScreen = function ManageScreen() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      backupFileName = _useState4[0],\n      setBackupFileName = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var onBackup = function _callee() {\n    var name, _e$response;\n\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(PSUT_ChatroomApi.createBackup());\n\n          case 4:\n            name = _context.sent;\n            console.log(name.data);\n            setLoading(false);\n            setBackupFileName(name.data);\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            setLoading(false);\n            if ((_context.t0 == null ? void 0 : (_e$response = _context.t0.response) == null ? void 0 : _e$response.status) === 403) alert(\"You don't have permission to create backup\");else alert(\"Failed to create the backup\");\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 10]], Promise);\n  };\n\n  var onPatch = function _callee2() {\n    var _e$response2;\n\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setLoading(true);\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(PSUT_ChatroomApi.patchDatabase());\n\n          case 4:\n            setLoading(false);\n            alert(\"Patched Successfully\");\n            _context2.next = 12;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](1);\n            setLoading(false);\n            if ((_context2.t0 == null ? void 0 : (_e$response2 = _context2.t0.response) == null ? void 0 : _e$response2.status) === 403) alert(\"You don't have permission to patch the database\");else alert(\"Failed to patch the database\");\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  };\n\n  var onClear = function _callee3() {\n    var _e$response3;\n\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setModalVisible(false);\n            setLoading(true);\n            _context3.prev = 2;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(PSUT_ChatroomApi.clearDatabase());\n\n          case 5:\n            setLoading(false);\n            alert(\"Cleared Successfully\");\n            _context3.next = 13;\n            break;\n\n          case 9:\n            _context3.prev = 9;\n            _context3.t0 = _context3[\"catch\"](2);\n            setLoading(false);\n            if ((_context3.t0 == null ? void 0 : (_e$response3 = _context3.t0.response) == null ? void 0 : _e$response3.status) === 403) alert(\"You don't have permission to clear the database\");else alert(\"Failed to clear the database\");\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[2, 9]], Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Portal, {\n      children: _jsx(Modal, {\n        visible: modalVisible,\n        onDismiss: function onDismiss() {\n          return setModalVisible(false);\n        },\n        children: _jsxs(View, {\n          style: styles.modal_ClearDbWarning,\n          children: [_jsx(Text, {\n            style: {\n              fontSize: 16,\n              textAlign: \"center\"\n            },\n            children: \"Are you sure you want to continue?\"\n          }), _jsx(Text, {\n            style: {\n              fontSize: 16,\n              textAlign: \"center\"\n            },\n            children: \"This action cannot be undone!\"\n          }), _jsxs(View, {\n            style: styles.modal_btnsContainer,\n            children: [_jsx(Button, {\n              color: \"crimson\",\n              onPress: function onPress() {\n                return onClear();\n              },\n              children: \"Delete, All\"\n            }), _jsx(Button, {\n              onPress: function onPress() {\n                return setModalVisible(false);\n              },\n              children: \"Cancel\"\n            })]\n          })]\n        })\n      })\n    }), _jsx(Portal, {\n      children: _jsx(Modal, {\n        visible: !!backupFileName,\n        onDismiss: function onDismiss() {\n          return setBackupFileName(\"\");\n        },\n        children: _jsxs(View, {\n          style: styles.modal_ClearDbWarning,\n          children: [_jsx(Text, {\n            style: {\n              fontSize: 16,\n              textAlign: \"center\"\n            },\n            children: \"Database backup completed successfully\"\n          }), _jsxs(Text, {\n            style: {\n              fontSize: 16,\n              marginTop: 6,\n              textAlign: \"center\",\n              color: \"crimson\"\n            },\n            children: [\"FILE: \", backupFileName]\n          }), _jsx(View, {\n            style: styles.modal_btnsContainer,\n            children: _jsx(Button, {\n              style: {\n                width: \"100%\"\n              },\n              onPress: function onPress() {\n                return setBackupFileName(\"\");\n              },\n              children: \"OK\"\n            })\n          })]\n        })\n      })\n    }), _jsx(LoadingScreen, {\n      visible: loading\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"SYSTEM ADMINISTRATION\"\n    }), _jsxs(View, {\n      children: [_jsx(Button, {\n        onPress: function onPress() {\n          return onBackup();\n        },\n        style: styles.btn,\n        mode: \"contained\",\n        children: \"Create Database Backup\"\n      }), _jsx(Button, {\n        onPress: function onPress() {\n          return onPatch();\n        },\n        style: styles.btn,\n        mode: \"contained\",\n        children: \"Patch Database\"\n      }), _jsx(Button, {\n        onPress: function onPress() {\n          return setModalVisible(true);\n        },\n        color: \"#cc0000\",\n        style: styles.btn,\n        mode: \"contained\",\n        children: \"Clear Database\"\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    paddingVertical: 36,\n    paddingHorizontal: 30\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 14\n  },\n  btn: {\n    padding: 10,\n    marginTop: 20\n  },\n  modal_ClearDbWarning: {\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 15,\n    paddingTop: 20,\n    margin: 15,\n    borderRadius: 6\n  },\n  modal_btnsContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginTop: 20\n  }\n});\nexport default ManageScreen;","map":{"version":3,"names":["React","useState","Button","Modal","Portal","Text","PSUT_ChatroomApi","LoadingScreen","Cache","ManageScreen","modalVisible","setModalVisible","backupFileName","setBackupFileName","loading","setLoading","onBackup","createBackup","name","console","log","data","response","status","alert","onPatch","patchDatabase","onClear","clearDatabase","styles","container","modal_ClearDbWarning","fontSize","textAlign","modal_btnsContainer","marginTop","color","width","title","btn","StyleSheet","create","alignItems","paddingVertical","paddingHorizontal","marginBottom","padding","backgroundColor","justifyContent","paddingTop","margin","borderRadius","flexDirection"],"sources":["C:/Users/Ahmed/Desktop/Projects/UniChat/Mobile/screen/ManageScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { Button, Modal, Portal, Text } from \"react-native-paper\";\nimport { PSUT_ChatroomApi } from \"../api/routeApi\";\nimport LoadingScreen from \"../componnetns/LoadingScreen\";\nimport { Cache } from \"../helpers/cache\";\n\nconst ManageScreen = () => {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [backupFileName, setBackupFileName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const onBackup = async () => {\n    setLoading(true);\n\n    try {\n      const name = await PSUT_ChatroomApi.createBackup();\n      console.log(name.data);\n      setLoading(false);\n      setBackupFileName(name.data);\n    } catch (e) {\n      setLoading(false);\n      if (e?.response?.status === 403)\n        alert(\"You don't have permission to create backup\");\n      else alert(\"Failed to create the backup\");\n    }\n  };\n\n  const onPatch = async () => {\n    setLoading(true);\n    try {\n      await PSUT_ChatroomApi.patchDatabase();\n      setLoading(false);\n      alert(\"Patched Successfully\");\n    } catch (e) {\n      setLoading(false);\n      if (e?.response?.status === 403)\n        alert(\"You don't have permission to patch the database\");\n      else alert(\"Failed to patch the database\");\n    }\n  };\n\n  const onClear = async () => {\n    setModalVisible(false);\n    setLoading(true);\n\n    try {\n      await PSUT_ChatroomApi.clearDatabase();\n      setLoading(false);\n      alert(\"Cleared Successfully\");\n    } catch (e) {\n      setLoading(false);\n      if (e?.response?.status === 403)\n        alert(\"You don't have permission to clear the database\");\n      else alert(\"Failed to clear the database\");\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Portal>\n        <Modal visible={modalVisible} onDismiss={() => setModalVisible(false)}>\n          <View style={styles.modal_ClearDbWarning}>\n            <Text style={{ fontSize: 16, textAlign: \"center\" }}>\n              Are you sure you want to continue?\n            </Text>\n            <Text style={{ fontSize: 16, textAlign: \"center\" }}>\n              This action cannot be undone!\n            </Text>\n\n            <View style={styles.modal_btnsContainer}>\n              <Button color=\"crimson\" onPress={() => onClear()}>\n                Delete, All\n              </Button>\n              <Button onPress={() => setModalVisible(false)}>Cancel</Button>\n            </View>\n          </View>\n        </Modal>\n      </Portal>\n      <Portal>\n        <Modal\n          visible={!!backupFileName}\n          onDismiss={() => setBackupFileName(\"\")}\n        >\n          <View style={styles.modal_ClearDbWarning}>\n            <Text style={{ fontSize: 16, textAlign: \"center\" }}>\n              Database backup completed successfully\n            </Text>\n            <Text\n              style={{\n                fontSize: 16,\n                marginTop: 6,\n                textAlign: \"center\",\n                color: \"crimson\",\n              }}\n            >\n              FILE: {backupFileName}\n            </Text>\n            <View style={styles.modal_btnsContainer}>\n              <Button\n                style={{ width: \"100%\" }}\n                onPress={() => setBackupFileName(\"\")}\n              >\n                OK\n              </Button>\n            </View>\n          </View>\n        </Modal>\n      </Portal>\n      <LoadingScreen visible={loading} />\n      <Text style={styles.title}>SYSTEM ADMINISTRATION</Text>\n      <View>\n        <Button onPress={() => onBackup()} style={styles.btn} mode=\"contained\">\n          Create Database Backup\n        </Button>\n        <Button onPress={() => onPatch()} style={styles.btn} mode=\"contained\">\n          Patch Database\n        </Button>\n        <Button\n          onPress={() => setModalVisible(true)}\n          color=\"#cc0000\"\n          style={styles.btn}\n          mode=\"contained\"\n        >\n          Clear Database\n        </Button>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    paddingVertical: 36,\n    paddingHorizontal: 30,\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 14,\n  },\n  btn: {\n    padding: 10,\n    marginTop: 20,\n  },\n  modal_ClearDbWarning: {\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 15,\n    paddingTop: 20,\n    margin: 15,\n    borderRadius: 6,\n  },\n  modal_btnsContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginTop: 20,\n  },\n});\n\nexport default ManageScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}