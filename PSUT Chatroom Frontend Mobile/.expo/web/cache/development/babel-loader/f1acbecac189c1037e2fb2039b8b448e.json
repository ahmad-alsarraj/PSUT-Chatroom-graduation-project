{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _excluded = [\"emoji\", \"colSize\"],\n    _excluded2 = [\"theme\", \"columns\", \"placeholder\", \"showHistory\", \"showSearchBar\", \"showSectionTitles\", \"showTabs\"];\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport emoji from \"emoji-datasource\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Categories = {\n  all: {\n    symbol: null,\n    name: \"All\"\n  },\n  history: {\n    symbol: \"🕘\",\n    name: \"Recently used\"\n  },\n  emotion: {\n    symbol: \"😀\",\n    name: \"Smileys & Emotion\"\n  },\n  people: {\n    symbol: \"🧑\",\n    name: \"People & Body\"\n  },\n  nature: {\n    symbol: \"🦄\",\n    name: \"Animals & Nature\"\n  },\n  food: {\n    symbol: \"🍔\",\n    name: \"Food & Drink\"\n  },\n  activities: {\n    symbol: \"⚾️\",\n    name: \"Activities\"\n  },\n  places: {\n    symbol: \"✈️\",\n    name: \"Travel & Places\"\n  },\n  objects: {\n    symbol: \"💡\",\n    name: \"Objects\"\n  },\n  symbols: {\n    symbol: \"🔣\",\n    name: \"Symbols\"\n  },\n  flags: {\n    symbol: \"🏳️‍🌈\",\n    name: \"Flags\"\n  }\n};\n\nvar charFromUtf16 = function charFromUtf16(utf16) {\n  return String.fromCodePoint.apply(String, _toConsumableArray(utf16.split(\"-\").map(function (u) {\n    return \"0x\" + u;\n  })));\n};\n\nexport var charFromEmojiObject = function charFromEmojiObject(obj) {\n  return charFromUtf16(obj.unified);\n};\nvar filteredEmojis = emoji.filter(function (e) {\n  return !e[\"obsoleted_by\"];\n});\n\nvar emojiByCategory = function emojiByCategory(category) {\n  return filteredEmojis.filter(function (e) {\n    return e.category === category;\n  });\n};\n\nvar sortEmoji = function sortEmoji(list) {\n  return list.sort(function (a, b) {\n    return a.sort_order - b.sort_order;\n  });\n};\n\nvar categoryKeys = Object.keys(Categories);\n\nvar TabBar = function TabBar(_ref) {\n  var theme = _ref.theme,\n      activeCategory = _ref.activeCategory,\n      _onPress = _ref.onPress,\n      width = _ref.width;\n  var tabSize = width / categoryKeys.length;\n  return categoryKeys.map(function (c) {\n    var category = Categories[c];\n    if (c !== \"all\") return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return _onPress(category);\n      },\n      style: {\n        flex: 1,\n        height: tabSize,\n        borderColor: category === activeCategory ? theme : \"#EEEEEE\",\n        borderBottomWidth: 2,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: _jsx(Text, {\n        style: {\n          textAlign: \"center\",\n          paddingBottom: 8,\n          fontSize: tabSize - 24\n        },\n        children: category.symbol\n      })\n    }, category.name);\n  });\n};\n\nvar EmojiCell = function EmojiCell(_ref2) {\n  var emoji = _ref2.emoji,\n      colSize = _ref2.colSize,\n      other = _objectWithoutProperties(_ref2, _excluded);\n\n  return _jsx(TouchableOpacity, _objectSpread(_objectSpread({\n    activeOpacity: 0.5,\n    style: {\n      width: colSize,\n      height: colSize,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }\n  }, other), {}, {\n    children: _jsx(Text, {\n      style: {\n        color: \"#FFFFFF\",\n        fontSize: colSize - 12\n      },\n      children: charFromEmojiObject(emoji)\n    })\n  }));\n};\n\nvar storage_key = \"@react-native-emoji-selector:HISTORY\";\n\nvar EmojiSelector = function (_Component) {\n  _inherits(EmojiSelector, _Component);\n\n  var _super = _createSuper(EmojiSelector);\n\n  function EmojiSelector() {\n    var _this;\n\n    _classCallCheck(this, EmojiSelector);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      searchQuery: \"\",\n      category: Categories.people,\n      isReady: false,\n      history: [],\n      emojiList: null,\n      colSize: 0,\n      width: 0\n    };\n\n    _this.handleTabSelect = function (category) {\n      if (_this.state.isReady) {\n        if (_this.scrollview) _this.scrollview.scrollToOffset({\n          x: 0,\n          y: 0,\n          animated: false\n        });\n\n        _this.setState({\n          searchQuery: \"\",\n          category: category\n        });\n      }\n    };\n\n    _this.handleEmojiSelect = function (emoji) {\n      if (_this.props.showHistory) {\n        _this.addToHistoryAsync(emoji);\n      }\n\n      _this.props.onEmojiSelected(charFromEmojiObject(emoji));\n    };\n\n    _this.handleSearch = function (searchQuery) {\n      _this.setState({\n        searchQuery: searchQuery\n      });\n    };\n\n    _this.addToHistoryAsync = function _callee(emoji) {\n      var history, value, record, json, _record;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(storage_key));\n\n            case 2:\n              history = _context.sent;\n              value = [];\n\n              if (!history) {\n                record = _extends({}, emoji, {\n                  count: 1\n                });\n                value.push(record);\n              } else {\n                json = JSON.parse(history);\n\n                if (json.filter(function (r) {\n                  return r.unified === emoji.unified;\n                }).length > 0) {\n                  value = json;\n                } else {\n                  _record = _extends({}, emoji, {\n                    count: 1\n                  });\n                  value = [_record].concat(_toConsumableArray(json));\n                }\n              }\n\n              AsyncStorage.setItem(storage_key, JSON.stringify(value));\n\n              _this.setState({\n                history: value\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.loadHistoryAsync = function _callee2() {\n      var result, history;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(storage_key));\n\n            case 2:\n              result = _context2.sent;\n\n              if (result) {\n                history = JSON.parse(result);\n\n                _this.setState({\n                  history: history\n                });\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.renderEmojiCell = function (_ref3) {\n      var item = _ref3.item;\n      return _jsx(EmojiCell, {\n        emoji: item.emoji,\n        onPress: function onPress() {\n          return _this.handleEmojiSelect(item.emoji);\n        },\n        colSize: _this.state.colSize\n      }, item.key);\n    };\n\n    _this.handleLayout = function (_ref4) {\n      var layout = _ref4.nativeEvent.layout;\n\n      _this.setState({\n        width: layout.width\n      }, function () {\n        _this.prerenderEmojis(function () {\n          _this.setState({\n            isReady: true\n          });\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EmojiSelector, [{\n    key: \"returnSectionData\",\n    value: function returnSectionData() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          history = _this$state.history,\n          emojiList = _this$state.emojiList,\n          searchQuery = _this$state.searchQuery,\n          category = _this$state.category;\n\n      var emojiData = function () {\n        if (category === Categories.all && searchQuery === \"\") {\n          var largeList = [];\n          categoryKeys.forEach(function (c) {\n            var name = Categories[c].name;\n            var list = name === Categories.history.name ? history : emojiList[name];\n            if (c !== \"all\" && c !== \"history\") largeList = largeList.concat(list);\n          });\n          return largeList.map(function (emoji) {\n            return {\n              key: emoji.unified,\n              emoji: emoji\n            };\n          });\n        } else {\n          var list;\n          var hasSearchQuery = searchQuery !== \"\";\n          var name = category.name;\n\n          if (hasSearchQuery) {\n            var filtered = emoji.filter(function (e) {\n              var display = false;\n              e.short_names.forEach(function (name) {\n                if (name.includes(searchQuery.toLowerCase())) display = true;\n              });\n              return display;\n            });\n            list = sortEmoji(filtered);\n          } else if (name === Categories.history.name) {\n            list = history;\n          } else {\n            list = emojiList[name];\n          }\n\n          return list.map(function (emoji) {\n            return {\n              key: emoji.unified,\n              emoji: emoji\n            };\n          });\n        }\n      }();\n\n      return this.props.shouldInclude ? emojiData.filter(function (e) {\n        return _this2.props.shouldInclude(e.emoji);\n      }) : emojiData;\n    }\n  }, {\n    key: \"prerenderEmojis\",\n    value: function prerenderEmojis(callback) {\n      var emojiList = {};\n      categoryKeys.forEach(function (c) {\n        var name = Categories[c].name;\n        emojiList[name] = sortEmoji(emojiByCategory(name));\n      });\n      this.setState({\n        emojiList: emojiList,\n        colSize: Math.floor(this.state.width / this.props.columns)\n      }, callback);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          category = _this$props.category,\n          showHistory = _this$props.showHistory;\n      this.setState({\n        category: category\n      });\n\n      if (showHistory) {\n        this.loadHistoryAsync();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          theme = _this$props2.theme,\n          columns = _this$props2.columns,\n          placeholder = _this$props2.placeholder,\n          showHistory = _this$props2.showHistory,\n          showSearchBar = _this$props2.showSearchBar,\n          showSectionTitles = _this$props2.showSectionTitles,\n          showTabs = _this$props2.showTabs,\n          other = _objectWithoutProperties(_this$props2, _excluded2);\n\n      var _this$state2 = this.state,\n          category = _this$state2.category,\n          colSize = _this$state2.colSize,\n          isReady = _this$state2.isReady,\n          searchQuery = _this$state2.searchQuery;\n\n      var Searchbar = _jsx(View, {\n        style: styles.searchbar_container,\n        children: _jsx(TextInput, {\n          style: styles.search,\n          placeholder: placeholder,\n          clearButtonMode: \"always\",\n          returnKeyType: \"done\",\n          autoCorrect: false,\n          underlineColorAndroid: theme,\n          value: searchQuery,\n          onChangeText: this.handleSearch\n        })\n      });\n\n      var title = searchQuery !== \"\" ? \"Search Results\" : category.name;\n      return _jsxs(View, _objectSpread(_objectSpread({\n        style: styles.frame\n      }, other), {}, {\n        onLayout: this.handleLayout,\n        children: [_jsx(View, {\n          style: styles.tabBar,\n          children: showTabs && _jsx(TabBar, {\n            activeCategory: category,\n            onPress: this.handleTabSelect,\n            theme: theme,\n            width: this.state.width\n          })\n        }), _jsxs(View, {\n          style: {\n            flex: 1\n          },\n          children: [showSearchBar && Searchbar, isReady ? _jsx(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxs(View, {\n              style: styles.container,\n              children: [showSectionTitles && _jsx(Text, {\n                style: styles.sectionHeader,\n                children: title\n              }), _jsx(FlatList, {\n                style: styles.scrollview,\n                contentContainerStyle: {\n                  paddingBottom: colSize\n                },\n                data: this.returnSectionData(),\n                renderItem: this.renderEmojiCell,\n                horizontal: false,\n                numColumns: columns,\n                keyboardShouldPersistTaps: \"always\",\n                ref: function ref(scrollview) {\n                  return _this3.scrollview = scrollview;\n                },\n                removeClippedSubviews: true\n              })]\n            })\n          }) : _jsx(View, _objectSpread(_objectSpread({\n            style: styles.loader\n          }, other), {}, {\n            children: _jsx(ActivityIndicator, {\n              size: \"large\",\n              color: Platform.OS === \"android\" ? theme : \"#000000\"\n            })\n          }))]\n        })]\n      }));\n    }\n  }]);\n\n  return EmojiSelector;\n}(Component);\n\nexport { EmojiSelector as default };\nEmojiSelector.defaultProps = {\n  theme: \"#007AFF\",\n  category: Categories.all,\n  showTabs: true,\n  showSearchBar: true,\n  showHistory: false,\n  showSectionTitles: true,\n  columns: 6,\n  placeholder: \"Search...\"\n};\nvar styles = StyleSheet.create({\n  frame: {\n    flex: 1,\n    width: \"100%\"\n  },\n  loader: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  tabBar: {\n    flexDirection: \"row\"\n  },\n  scrollview: {\n    flex: 1\n  },\n  searchbar_container: {\n    width: \"100%\",\n    zIndex: 1,\n    backgroundColor: \"rgba(255,255,255,0.75)\"\n  },\n  search: _objectSpread(_objectSpread({}, Platform.select({\n    ios: {\n      height: 36,\n      paddingLeft: 8,\n      borderRadius: 10,\n      backgroundColor: \"#E5E8E9\"\n    }\n  })), {}, {\n    margin: 8\n  }),\n  container: {\n    flex: 1,\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    alignItems: \"flex-start\"\n  },\n  sectionHeader: {\n    margin: 8,\n    fontSize: 17,\n    width: \"100%\",\n    color: \"#8F8F8F\"\n  }\n});","map":{"version":3,"names":["React","Component","AsyncStorage","emoji","Categories","all","symbol","name","history","emotion","people","nature","food","activities","places","objects","symbols","flags","charFromUtf16","utf16","String","fromCodePoint","split","map","u","charFromEmojiObject","obj","unified","filteredEmojis","filter","e","emojiByCategory","category","sortEmoji","list","sort","a","b","sort_order","categoryKeys","Object","keys","TabBar","theme","activeCategory","onPress","width","tabSize","length","c","flex","height","borderColor","borderBottomWidth","alignItems","justifyContent","textAlign","paddingBottom","fontSize","EmojiCell","colSize","other","color","storage_key","EmojiSelector","state","searchQuery","isReady","emojiList","handleTabSelect","scrollview","scrollToOffset","x","y","animated","setState","handleEmojiSelect","props","showHistory","addToHistoryAsync","onEmojiSelected","handleSearch","getItem","value","record","count","push","json","JSON","parse","r","setItem","stringify","loadHistoryAsync","result","renderEmojiCell","item","key","handleLayout","layout","nativeEvent","prerenderEmojis","emojiData","largeList","forEach","concat","hasSearchQuery","filtered","display","short_names","includes","toLowerCase","shouldInclude","callback","Math","floor","columns","placeholder","showSearchBar","showSectionTitles","showTabs","Searchbar","styles","searchbar_container","search","title","frame","tabBar","container","sectionHeader","returnSectionData","loader","Platform","OS","defaultProps","StyleSheet","create","flexDirection","zIndex","backgroundColor","select","ios","paddingLeft","borderRadius","margin","flexWrap"],"sources":["C:/Users/Ahmed/Desktop/Projects/UniChat/Mobile/node_modules/react-native-emoji-selector/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  TextInput,\n  Platform,\n  ActivityIndicator,\n  AsyncStorage,\n  FlatList\n} from \"react-native\";\nimport emoji from \"emoji-datasource\";\n\nexport const Categories = {\n  all: {\n    symbol: null,\n    name: \"All\"\n  },\n  history: {\n    symbol: \"🕘\",\n    name: \"Recently used\"\n  },\n  emotion: {\n    symbol: \"😀\",\n    name: \"Smileys & Emotion\"\n  },\n  people: {\n    symbol: \"🧑\",\n    name: \"People & Body\"\n  },\n  nature: {\n    symbol: \"🦄\",\n    name: \"Animals & Nature\"\n  },\n  food: {\n    symbol: \"🍔\",\n    name: \"Food & Drink\"\n  },\n  activities: {\n    symbol: \"⚾️\",\n    name: \"Activities\"\n  },\n  places: {\n    symbol: \"✈️\",\n    name: \"Travel & Places\"\n  },\n  objects: {\n    symbol: \"💡\",\n    name: \"Objects\"\n  },\n  symbols: {\n    symbol: \"🔣\",\n    name: \"Symbols\"\n  },\n  flags: {\n    symbol: \"🏳️‍🌈\",\n    name: \"Flags\"\n  }\n};\n\nconst charFromUtf16 = utf16 =>\n  String.fromCodePoint(...utf16.split(\"-\").map(u => \"0x\" + u));\nexport const charFromEmojiObject = obj => charFromUtf16(obj.unified);\nconst filteredEmojis = emoji.filter(e => !e[\"obsoleted_by\"]);\nconst emojiByCategory = category =>\n  filteredEmojis.filter(e => e.category === category);\nconst sortEmoji = list => list.sort((a, b) => a.sort_order - b.sort_order);\nconst categoryKeys = Object.keys(Categories);\n\nconst TabBar = ({ theme, activeCategory, onPress, width }) => {\n  const tabSize = width / categoryKeys.length;\n\n  return categoryKeys.map(c => {\n    const category = Categories[c];\n    if (c !== \"all\")\n      return (\n        <TouchableOpacity\n          key={category.name}\n          onPress={() => onPress(category)}\n          style={{\n            flex: 1,\n            height: tabSize,\n            borderColor: category === activeCategory ? theme : \"#EEEEEE\",\n            borderBottomWidth: 2,\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          }}\n        >\n          <Text\n            style={{\n              textAlign: \"center\",\n              paddingBottom: 8,\n              fontSize: tabSize - 24\n            }}\n          >\n            {category.symbol}\n          </Text>\n        </TouchableOpacity>\n      );\n  });\n};\n\nconst EmojiCell = ({ emoji, colSize, ...other }) => (\n  <TouchableOpacity\n    activeOpacity={0.5}\n    style={{\n      width: colSize,\n      height: colSize,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }}\n    {...other}\n  >\n    <Text style={{ color: \"#FFFFFF\", fontSize: colSize - 12 }}>\n      {charFromEmojiObject(emoji)}\n    </Text>\n  </TouchableOpacity>\n);\n\nconst storage_key = \"@react-native-emoji-selector:HISTORY\";\nexport default class EmojiSelector extends Component {\n  state = {\n    searchQuery: \"\",\n    category: Categories.people,\n    isReady: false,\n    history: [],\n    emojiList: null,\n    colSize: 0,\n    width: 0\n  };\n\n  //\n  //  HANDLER METHODS\n  //\n  handleTabSelect = category => {\n    if (this.state.isReady) {\n      if (this.scrollview)\n        this.scrollview.scrollToOffset({ x: 0, y: 0, animated: false });\n      this.setState({\n        searchQuery: \"\",\n        category\n      });\n    }\n  };\n\n  handleEmojiSelect = emoji => {\n    if (this.props.showHistory) {\n      this.addToHistoryAsync(emoji);\n    }\n    this.props.onEmojiSelected(charFromEmojiObject(emoji));\n  };\n\n  handleSearch = searchQuery => {\n    this.setState({ searchQuery });\n  };\n\n  addToHistoryAsync = async emoji => {\n    let history = await AsyncStorage.getItem(storage_key);\n\n    let value = [];\n    if (!history) {\n      // no history\n      let record = Object.assign({}, emoji, { count: 1 });\n      value.push(record);\n    } else {\n      let json = JSON.parse(history);\n      if (json.filter(r => r.unified === emoji.unified).length > 0) {\n        value = json;\n      } else {\n        let record = Object.assign({}, emoji, { count: 1 });\n        value = [record, ...json];\n      }\n    }\n\n    AsyncStorage.setItem(storage_key, JSON.stringify(value));\n    this.setState({\n      history: value\n    });\n  };\n\n  loadHistoryAsync = async () => {\n    let result = await AsyncStorage.getItem(storage_key);\n    if (result) {\n      let history = JSON.parse(result);\n      this.setState({ history });\n    }\n  };\n\n  //\n  //  RENDER METHODS\n  //\n  renderEmojiCell = ({ item }) => (\n    <EmojiCell\n      key={item.key}\n      emoji={item.emoji}\n      onPress={() => this.handleEmojiSelect(item.emoji)}\n      colSize={this.state.colSize}\n    />\n  );\n\n  returnSectionData() {\n    const { history, emojiList, searchQuery, category } = this.state;\n    let emojiData = (function() {\n        if (category === Categories.all && searchQuery === \"\") {\n        //TODO: OPTIMIZE THIS\n        let largeList = [];\n        categoryKeys.forEach(c => {\n          const name = Categories[c].name;\n          const list =\n            name === Categories.history.name ? history : emojiList[name];\n          if (c !== \"all\" && c !== \"history\") largeList = largeList.concat(list);\n        });\n\n        return largeList.map(emoji => ({ key: emoji.unified, emoji }));\n      } else {\n        let list;\n        const hasSearchQuery = searchQuery !== \"\";\n        const name = category.name;\n        if (hasSearchQuery) {\n          const filtered = emoji.filter(e => {\n            let display = false;\n            e.short_names.forEach(name => {\n              if (name.includes(searchQuery.toLowerCase())) display = true;\n            });\n            return display;\n          });\n          list = sortEmoji(filtered);\n        } else if (name === Categories.history.name) {\n          list = history;\n        } else {\n          list = emojiList[name];\n        }\n        return list.map(emoji => ({ key: emoji.unified, emoji }));\n      }\n    })()\n    return this.props.shouldInclude ? emojiData.filter(e => this.props.shouldInclude(e.emoji)) : emojiData\n  }\n\n  prerenderEmojis(callback) {\n    let emojiList = {};\n    categoryKeys.forEach(c => {\n      let name = Categories[c].name;\n      emojiList[name] = sortEmoji(emojiByCategory(name));\n    });\n\n    this.setState(\n      {\n        emojiList,\n        colSize: Math.floor(this.state.width / this.props.columns)\n      },\n      callback\n    );\n  }\n\n  handleLayout = ({ nativeEvent: { layout } }) => {\n    this.setState({ width: layout.width }, () => {\n      this.prerenderEmojis(() => {\n        this.setState({ isReady: true });\n      });\n    });\n  };\n\n  //\n  //  LIFECYCLE METHODS\n  //\n  componentDidMount() {\n    const { category, showHistory } = this.props;\n    this.setState({ category });\n\n    if (showHistory) {\n      this.loadHistoryAsync();\n    }\n  }\n\n  render() {\n    const {\n      theme,\n      columns,\n      placeholder,\n      showHistory,\n      showSearchBar,\n      showSectionTitles,\n      showTabs,\n      ...other\n    } = this.props;\n\n    const { category, colSize, isReady, searchQuery } = this.state;\n\n    const Searchbar = (\n      <View style={styles.searchbar_container}>\n        <TextInput\n          style={styles.search}\n          placeholder={placeholder}\n          clearButtonMode=\"always\"\n          returnKeyType=\"done\"\n          autoCorrect={false}\n          underlineColorAndroid={theme}\n          value={searchQuery}\n          onChangeText={this.handleSearch}\n        />\n      </View>\n    );\n\n    const title = searchQuery !== \"\" ? \"Search Results\" : category.name;\n\n    return (\n      <View style={styles.frame} {...other} onLayout={this.handleLayout}>\n        <View style={styles.tabBar}>\n          {showTabs && (\n            <TabBar\n              activeCategory={category}\n              onPress={this.handleTabSelect}\n              theme={theme}\n              width={this.state.width}\n            />\n          )}\n        </View>\n        <View style={{ flex: 1 }}>\n          {showSearchBar && Searchbar}\n          {isReady ? (\n            <View style={{ flex: 1 }}>\n              <View style={styles.container}>\n                {showSectionTitles && (\n                  <Text style={styles.sectionHeader}>{title}</Text>\n                )}\n                <FlatList\n                  style={styles.scrollview}\n                  contentContainerStyle={{ paddingBottom: colSize }}\n                  data={this.returnSectionData()}\n                  renderItem={this.renderEmojiCell}\n                  horizontal={false}\n                  numColumns={columns}\n                  keyboardShouldPersistTaps={\"always\"}\n                  ref={scrollview => (this.scrollview = scrollview)}\n                  removeClippedSubviews\n                />\n              </View>\n            </View>\n          ) : (\n            <View style={styles.loader} {...other}>\n              <ActivityIndicator\n                size={\"large\"}\n                color={Platform.OS === \"android\" ? theme : \"#000000\"}\n              />\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  }\n}\n\nEmojiSelector.defaultProps = {\n  theme: \"#007AFF\",\n  category: Categories.all,\n  showTabs: true,\n  showSearchBar: true,\n  showHistory: false,\n  showSectionTitles: true,\n  columns: 6,\n  placeholder: \"Search...\"\n};\n\nconst styles = StyleSheet.create({\n  frame: {\n    flex: 1,\n    width: \"100%\"\n  },\n  loader: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  tabBar: {\n    flexDirection: \"row\"\n  },\n  scrollview: {\n    flex: 1\n  },\n  searchbar_container: {\n    width: \"100%\",\n    zIndex: 1,\n    backgroundColor: \"rgba(255,255,255,0.75)\"\n  },\n  search: {\n    ...Platform.select({\n      ios: {\n        height: 36,\n        paddingLeft: 8,\n        borderRadius: 10,\n        backgroundColor: \"#E5E8E9\"\n      }\n    }),\n    margin: 8\n  },\n  container: {\n    flex: 1,\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    alignItems: \"flex-start\"\n  },\n  sectionHeader: {\n    margin: 8,\n    fontSize: 17,\n    width: \"100%\",\n    color: \"#8F8F8F\"\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}