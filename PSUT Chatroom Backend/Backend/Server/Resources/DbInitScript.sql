START TRANSACTION;

CREATE TABLE "Courses" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NOT NULL,
    "RegnewId" text NOT NULL,
    CONSTRAINT "PK_Courses" PRIMARY KEY ("Id")
);

CREATE TABLE "Groups" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NOT NULL,
    "EncryptionSalt" text NOT NULL,
    CONSTRAINT "PK_Groups" PRIMARY KEY ("Id")
);

CREATE TABLE "Users" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RegnewId" text NOT NULL,
    "Email" text NOT NULL,
    "Name" text NOT NULL,
    "Role" smallint NOT NULL,
    "Token" text NULL,
    "EncryptionSalt" text NOT NULL,
    CONSTRAINT "PK_Users" PRIMARY KEY ("Id")
);

CREATE TABLE "Conversations" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "IsClosed" boolean NOT NULL DEFAULT FALSE,
    "GroupId" integer NULL,
    CONSTRAINT "PK_Conversations" PRIMARY KEY ("Id"),
    CONSTRAINT "CK_Conversation_IsClosed" CHECK ("IsClosed" = False OR "GroupId" IS NULL),
    CONSTRAINT "FK_Conversations_Groups_GroupId" FOREIGN KEY ("GroupId") REFERENCES "Groups" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Sections" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RegnewId" text NOT NULL,
    "Time" interval NOT NULL,
    "Days" smallint NOT NULL,
    "CourseId" integer NOT NULL,
    "GroupId" integer NOT NULL,
    CONSTRAINT "PK_Sections" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Sections_Courses_CourseId" FOREIGN KEY ("CourseId") REFERENCES "Courses" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Sections_Groups_GroupId" FOREIGN KEY ("GroupId") REFERENCES "Groups" ("Id") ON DELETE CASCADE
);

CREATE TABLE "GroupsMembers" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "GroupId" integer NOT NULL,
    "UserId" integer NOT NULL,
    "IsAdmin" boolean NOT NULL DEFAULT FALSE,
    CONSTRAINT "PK_GroupsMembers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_GroupsMembers_Groups_GroupId" FOREIGN KEY ("GroupId") REFERENCES "Groups" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_GroupsMembers_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Pings" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Content" text NOT NULL,
    "SenderId" integer NOT NULL,
    "RecipientId" integer NOT NULL,
    CONSTRAINT "PK_Pings" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Pings_Users_RecipientId" FOREIGN KEY ("RecipientId") REFERENCES "Users" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Pings_Users_SenderId" FOREIGN KEY ("SenderId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);

CREATE TABLE "DirectConversationsMembers" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "ConversationId" integer NOT NULL,
    CONSTRAINT "PK_DirectConversationsMembers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_DirectConversationsMembers_Conversations_ConversationId" FOREIGN KEY ("ConversationId") REFERENCES "Conversations" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_DirectConversationsMembers_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);

CREATE TABLE "Messages" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Content" text NULL,
    "AttachmentFileName" text NULL,
    "SendingTime" timestamp with time zone NOT NULL,
    "ConversationId" integer NOT NULL,
    "SenderId" integer NOT NULL,
    "ReferencedMessageId" integer NULL,
    "EncryptionSalt" text NOT NULL,
    CONSTRAINT "PK_Messages" PRIMARY KEY ("Id"),
    CONSTRAINT "CK_Message_AttachmentFileName" CHECK ("AttachmentFileName" IS NOT NULL OR "Content" IS NOT NULL),
    CONSTRAINT "FK_Messages_Conversations_ConversationId" FOREIGN KEY ("ConversationId") REFERENCES "Conversations" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Messages_Messages_ReferencedMessageId" FOREIGN KEY ("ReferencedMessageId") REFERENCES "Messages" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Messages_Users_SenderId" FOREIGN KEY ("SenderId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);

CREATE TABLE "MessagesDeliveryInfo" (
    "MessageId" integer NOT NULL,
    "RecipientId" integer NOT NULL,
    "ReadingTime" timestamp with time zone NOT NULL,
    "IsDeleted" boolean NOT NULL,
    CONSTRAINT "PK_MessagesDeliveryInfo" PRIMARY KEY ("MessageId", "RecipientId"),
    CONSTRAINT "FK_MessagesDeliveryInfo_Messages_MessageId" FOREIGN KEY ("MessageId") REFERENCES "Messages" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_MessagesDeliveryInfo_Users_RecipientId" FOREIGN KEY ("RecipientId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);

CREATE UNIQUE INDEX "IX_Conversations_GroupId" ON "Conversations" ("GroupId");

CREATE INDEX "IX_DirectConversationsMembers_ConversationId" ON "DirectConversationsMembers" ("ConversationId");

CREATE INDEX "IX_DirectConversationsMembers_UserId" ON "DirectConversationsMembers" ("UserId");

CREATE INDEX "IX_GroupsMembers_GroupId" ON "GroupsMembers" ("GroupId");

CREATE INDEX "IX_GroupsMembers_UserId" ON "GroupsMembers" ("UserId");

CREATE INDEX "IX_Messages_ConversationId" ON "Messages" ("ConversationId");

CREATE INDEX "IX_Messages_ReferencedMessageId" ON "Messages" ("ReferencedMessageId");

CREATE INDEX "IX_Messages_SenderId" ON "Messages" ("SenderId");

CREATE INDEX "IX_MessagesDeliveryInfo_RecipientId" ON "MessagesDeliveryInfo" ("RecipientId");

CREATE INDEX "IX_Pings_RecipientId" ON "Pings" ("RecipientId");

CREATE INDEX "IX_Pings_SenderId" ON "Pings" ("SenderId");

CREATE INDEX "IX_Sections_CourseId" ON "Sections" ("CourseId");

CREATE UNIQUE INDEX "IX_Sections_GroupId" ON "Sections" ("GroupId");

COMMIT;